@{
   
}
<link href="../assets/global/plugins/bootstrap-sweetalert/sweetalert.css" rel="stylesheet" />
<link href="../assets/global/plugins/bootstrap-modal/css/bootstrap-modal-bs3patch.css" rel="stylesheet" type="text/css" />
<link href="../assets/global/plugins/bootstrap-modal/css/bootstrap-modal.css" rel="stylesheet" type="text/css" />

@model BPOAttendanceProject.Models.ResourcePlan

<div>
    @using (Html.BeginForm("SaveResourcePlanView", "Admin", FormMethod.Post, new { @classs = "userform", @id = "form" }))
    {
        <div class="modal-content">
            <div class="modal-body">
                <div>
                    <div>
                        <!-- BEGIN SAMPLE FORM PORTLET-->
                        <div class="portlet light bordered">
                            <div class="m-heading-1 border-green m-bordered">
                                <div class="caption">
                                    <i class="fa fa-edit"></i>
                                  
                                      @if (Model.Id == 0)
                                    {
                                    <span class="caption-subject font-dark sbold uppercase">Add Resource Plan</span>
                                    }
                                    else
                                    {
                                        <span class="caption-subject font-dark sbold uppercase">Edit Resource Plan</span>
                                    }


                                </div>
                            </div>
                            <div class="portlet-body form">
                                <div class="form-horizontal">
                                    <div class="form-body">
                                        <div class="row">
                                            <div class="col-md-6">

                                            

                                              

                                                <div class="form-group">
                                                      @Html.HiddenFor(model => model.Id, new { @Id = "Id" })
                                                    <label class="col-md-3 control-label">Project</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.Projectcode, new { @id = "txtprojectcode", @class = "form-control", @placeholder = "Project code", @autocomplete = "off", @required = "required",@maxlength="20" })

                                                        </div>


                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-md-3 control-label">Event Code</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.eventcode, new { @id = "txteventcode", @class = "form-control", @placeholder = "Event code", @autocomplete = "off", @required = "required",@maxlength="20" })

                                                        </div>


                                                    </div>
                                                </div>

                                       

                                               
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label class="col-md-3 control-label">Start Date</label>
                                                    <div class="col-md-9">
                                                    <div class="input-group date date-picker" data-date-format="dd/mm/yyyy">
                                                        @Html.TextBoxFor(model => model.Startdate, new { @class = "form-control", @placeholder = "Date", @autocomplete = "off", @required = "true",@id="Startdate" })
                                                       
                                                        <span class="input-group-addon">
                                                            <i class="fa fa-calendar"></i>
                                                        </span>
                                                    </div>


                                                    </div>
                                                </div>
                                            </div>
                                                
                                                
                                               <div class="col-md-6">
                                                <div class="form-group">
                                                    <label class="col-md-3 control-label">End Date</label>
                                                    <div class="col-md-9">
                                                    <div class="input-group date date-picker" data-date-format="dd/mm/yyyy">
                                                        @Html.TextBoxFor(model => model.Completiondate, new { @class = "form-control", @placeholder = "Date", @autocomplete = "off", @required = "true",@id="Completiondate" })
                                                        <span class="input-group-addon">
                                                            <i class="fa fa-calendar"></i>
                                                        </span>
                                                    </div>


                                                    </div>
                                                </div>
                                            </div>  
                                                
                                                
                                                
                                               

                                                <div class="form-group">
                                                    <label class="col-md-3 control-label">Target(%)</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.TotaltargetP, new { @id = "txttarget", @class = "form-control", @placeholder = "Target(%)", @autocomplete = "off", @required = "required",@maxlength="20" ,@onkeypress="return isNumberKey(event)" })

                                                        </div>


                                                    </div>
                                                </div>

                                                  <div class="form-group">
                                                    <label class="col-md-3 control-label">Total Target Records</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.Completiontarget, new { @id = "txtcompletiontarget", @class = "form-control", @placeholder = "Completion target", @autocomplete = "off", @required = "required",@maxlength="20",@onkeypress="return isNumberKey(event)" })

                                                        </div>


                                                    </div>
                                                </div>

                                                

                                                

                                                 <div class="form-group">
                                                    <label class="col-md-3 control-label">Immediate completion target</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.Immediatetarget, new { @id = "txtimmediatetarget", @class = "form-control", @placeholder = "Immediate target", @autocomplete = "off", @required = "required",@maxlength="50",@onkeypress="return isNumberKey(event)" })

                                                        </div>
                                                        

                                                    </div>
                                                </div>

                                                 <div class="form-group">
                                                    <label class="col-md-3 control-label">Total characters available</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.Totalcharactersavailable, new { @id = "txtcompletiontarget", @class = "form-control", @placeholder = "Actual no of characters", @autocomplete = "off", @required = "required",@maxlength="20" ,@onkeypress="return isNumberKey(event)"})

                                                        </div>
                                                        
                                                        
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- END SAMPLE FORM PORTLET-->
                    </div>

                </div>
            </div>
            <div class="modal-footer">


               
                <button type="button" class="btn dark btn-outline" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn green">Save</button>
            </div>
        </div>
    }
    <!-- /.modal-content -->
</div>
<!-- /.modal-dialog -->





<!-- BEGIN PAGE LEVEL PLUGINS -->
<script src="../assets/global/plugins/bootstrap-sweetalert/sweetalert.js"></script>
<script src="../assets/global/plugins/bootstrap-modal/js/bootstrap-modalmanager.js" type="text/javascript"></script>
<script src="../assets/global/plugins/bootstrap-modal/js/bootstrap-modal.js" type="text/javascript"></script>
<!-- END PAGE LEVEL PLUGINS -->

<!-- BEGIN PAGE LEVEL SCRIPTS -->
<script src="../assets/pages/scripts/ui-extended-modals.min.js" type="text/javascript"></script>
<!-- END PAGE LEVEL SCRIPTS -->

<script>

   
    var startDate = new Date('01/12/2020');
    var FromEndDate = new Date();
    var ToEndDate = new Date();
    ToEndDate.setDate(ToEndDate.getDate() + 365);

    $("#Startdate").datepicker({
        weekStart: 1,
        startDate: '01/12/2020',
        endDate: FromEndDate,
        autoclose: true
    })
    .on('changeDate', function (selected) {
        startDate = new Date(selected.date.valueOf());
        startDate.setDate(startDate.getDate(new Date(selected.date.valueOf())));
        $("#Completiondate").datepicker('setStartDate', startDate);
    });
    $("#Completiondate")
        .datepicker({
            weekStart: 1,
            startDate: startDate,
            endDate: ToEndDate,
            autoclose: true
        })
        .on('changeDate', function (selected) {
            FromEndDate = new Date(selected.date.valueOf());
            FromEndDate.setDate(FromEndDate.getDate(new Date(selected.date.valueOf())));
            $("#Startdate").datepicker('setEndDate', FromEndDate);
        });







    //var start = new Date();
    //// set end date to max one year period:
    //var end = new Date(new Date().setYear(start.getFullYear() + 1));

    //$('#Startdate').datepicker({
    //    startDate: start,
    //    endDate: end
    //    // update "toDate" defaults whenever "fromDate" changes
    //}).on('changeDate', function () {
    //    // set the "toDate" start to not be later than "fromDate" ends:
    //    $('#Completiondate').datepicker('setStartDate', new Date($(this).val()));
    //});

    //$('#Completiondate').datepicker({
    //    startDate: start,
    //    endDate: end
    //    // update "fromDate" defaults whenever "toDate" changes
    //}).on('changeDate', function () {
    //    // set the "fromDate" end to not be later than "toDate" starts:
    //    $('#Startdate').datepicker('setEndDate', new Date($(this).val()));
    //});

   
    //$('.date-picker').datepicker({
    //    format: 'dd/mm/yyyy',
    //            autoclose: true
    //});

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            //alert("Please Enter Only Numeric Value:");
            return false;
        }

        return true;
    }

    </script>
<style>

    .sweet-overlay {
        z-index: 20000;
    }

    .sweet-alert {
        z-index: 20000;
    }
</style>















