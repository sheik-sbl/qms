
@model  BPOAttendanceProject.Models.SummaryModel  

@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int count = 0;
}




<!-- BEGIN PAGE LEVEL PLUGINS -->

<link href="../assets/global/plugins/datatables/datatables.min.css" rel="stylesheet" type="text/css" />
<link href="../assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css" rel="stylesheet" type="text/css" />

<!-- END PAGE LEVEL PLUGINS -->

<!-- BEGIN PAGE BAR -->

<style>
div.a {
  font-size: 15px;
  font-weight: bold;
}
</style>

@using (Html.BeginForm("EditAttendance", "Admin", FormMethod.Post, new { @id = "form" }))
{

<div class="page-container" style="margin-top:20px">
    <!-- BEGIN SIDEBAR -->
    <div class="row">
        <div class="col-md-12">
            <!-- BEGIN EXAMPLE TABLE PORTLET-->
            <div class="portlet light bordered">
                <div class="portlet-title">  
                    <div class="caption font-dark">
                        <i class="icon-settings font-dark"></i>
                        <span class="caption-subject bold uppercase">Employee List</span>
                    </div>
                  
                </div>
                <div class="portlet-body">
                    

                         @if (Model.EmployeeList.Count > 0)
                         {     


                    <div class="table-header"> 
                        
                        <p><label>Date:</label><input type="text" id="dateFrom" name="dateFrom"></p>
                        <input type="button" value="Excel Export" onclick="location.href='@Url.Action("ExportAttendance", "Admin")?Date=' + $('#dateFrom').val()" />            
                   
                        <div class="form-group">
                                                    @if (@TempData["Msg"] != null)
                                                    {
                                                        <div class="alert alert-info" id="MsgDiv">
                                                            <button type="button" class="close" data-dismiss="alert"><i class="ace-icon fa fa-times"></i></button>
                                                            @TempData["Msg"]
                                                        </div>
                                                    }
                                                </div>



                 </div>@* 
                                                
                      <div class="table-header">
                                                <div class="form-group">
                                                    @if (@TempData["Msg"] != null)
                                                    {
                                                        <div class="alert alert-info" id="MsgDiv">
                                                            <button type="button" class="close" data-dismiss="alert"><i class="ace-icon fa fa-times"></i></button>
                                                            @TempData["Msg"]
                                                        </div>
                                                    }
                                                </div>
                       </div>                        
                   
                  
                    *@<table class="table table-striped table-bordered table-hover table-checkable order-column" id="tbluser" style="padding:4px" >
                        <thead>
                            <tr>
                               
                                <th style="font-size:12px;padding:4px;">Sl No </th>
                                <th style="font-size:12px;padding:4px;">PSN </th>
                                <th style="font-size:12px;padding:4px;">AssociateName</th>
                                <th style="font-size:12px;padding:4px;">Project</th>
                                <th style="font-size:12px;padding:4px;">Code</th>
                               @* <th style="font-size:12px;padding:4px;">Eventcode</th>*@
                                <th style="font-size:12px;padding:4px;">Process</th>
                                <th style="font-size:12px;padding:4px;">Hrs/P</th>
                                <th style="font-size:12px;padding:4px;">Hrs/W</th>
@*                                <th style="font-size:12px;padding:4px;">Production Planned/Hr</th>*@
                                <th style="font-size:12px;padding:4px;">Leave</th>
                                <th style="font-size:12px;padding:4px;">Actual Production</th>
                                <th style="font-size:12px;padding:4px;">Work@Home</th>
                                <th id=""></th>
                                
                            </tr>
                        </thead>
                        <tbody>

                         
                                 
                              @for (int i = 0; i < Model.EmployeeList.Count; i++)
                              {
                                  count = count + 1; 
                               <tr id=@i class="odd gradeX">
                                <td  style="font-size:12px" class="sino";>
                                   @count
                                </td>
                                
                                <td style="font-size:12px"; class="psn">@Model.EmployeeList[i].PSN@Html.HiddenFor(m => @Model.EmployeeList[i].PSN)</td>
                              
                                <td style="width:40px;font-size:12px" class="associate">@Model.EmployeeList[i].Associatename@Html.HiddenFor(m => Model.EmployeeList[i].Associatename)</td>
                             <td>
                               @Html.DropDownListFor(model => model.EmployeeList[i].project, new SelectList(Model.ProjectList, "value", "text", Model.EmployeeList[i].project), "Select", new { @class = "form-control", @style = "width:70px;font-size:12px;height:30px;", id = "project_" + @i })
                            </td>

                            <td>
                               @Html.DropDownListFor(model => model.EmployeeList[i].projectcode, new SelectList(Model.ProjconfList, "value", "text", Model.EmployeeList[i].projectcode), "Select", new { @class = "form-control", @style = "width:160px;font-size:12px;height:30px;", id = "project_" + @i, onchange = "CalculateProduction(" + @i + ")" })
                            </td>

                                  
                           
                           
                         <td> @Html.DropDownListFor(model => model.EmployeeList[i].process, new SelectList(new List<Object>
                                {
                                       new { value = "Indexing" , text = "Indexing"  },
                                       new { value ="Qc2" , text = "Qc2" },
                                       new { value = "Qc3" , text = "Qc3"},
                                       new { value = "Audit" , text = "Audit"},
                                       new { value = "UAT" , text = "UAT"  },
                                       new { value ="Training" , text = "Training" },
                                       new { value = "Rework" , text = "Rework"}
                                     
                  
                    },
                  "value", "text", Model.EmployeeList[i].process), new { @class = "form-control", @style = "width:100px;font-size:12px;height:30px;", id = "Process_" + @i, onchange = "CalculateProduction(" + @i + ")" })</td>  



                               
                                <td style="width:8%" ><input type="text" id="hr_@i"  value="@Model.EmployeeList[i].hoursplanned"  onkeyup="CalculateProduction(@i);"  style="width: 50%;font-size:12px;"  name="EmployeeList[@i].hoursplanned" class="phours"  />   </td>
                                <td style="width:8%" ><input type="text" id="hrwd_@i"  value="@Model.EmployeeList[i].hoursworked"    style="width: 90%;font-size:12px;"  name="EmployeeList[@i].hoursworked"   />   </td>
@*                               <td id="pdhr_@i" style="width:12px;font-size:12px;">@Model.EmployeeList[i].ProductionPlannedHr@Html.HiddenFor(m => @Model.EmployeeList[i].ProductionPlannedHr)</td>*@
                               
 <td> @Html.DropDownListFor(model => model.EmployeeList[i].Leave, new SelectList(new List<Object>
                                {
                                       new { value = "P" , text = "P"  },
                                       new { value ="PL" , text = "PL" },
                                       new { value = "UPL" , text = "UPL"},
                                       new { value = "HUPL" , text = "HUPL"},
                                       new { value = "R" , text = "R"  },
                                       new { value ="M" , text = "M" },
                                       new { value = "MEL" , text = "MEL"},
                                       new { value = "MAL" , text = "MAL"},
                                       new { value = "HOFF" , text = "HOFF"  },
                                       new { value ="FH" , text = "FH" },
                                       new { value = "OD" , text = "OD"},
                                       new { value = "LH" , text = "LH"}
                  
                    },
                  "value", "text", Model.EmployeeList[i].Leave), new { @class = "form-control", @style = "width:60px;font-size:12px;height:30px" })</td> 
                                <td>@Html.TextBoxFor(m => @Model.EmployeeList[i].ActualProduction, new { @class = "form-control", @style = "width:80px;font-size:12px;" }) </td>
                                <td>@Html.TextBoxFor(m => @Model.EmployeeList[i].workathome, new { @class = "form-control", @style = "width:80px;font-size:12px;" }) </td>

                               <td><input type="button" value="+" onclick="myFunction(@i)" /><input type="hidden" id="id_@i" value="@Model.EmployeeList[i].Id"  name="@Model.EmployeeList[i].Id" class="Id"/><input type="hidden" id="psn_@i" value="@Model.EmployeeList[i].PSN"  class="psn"/><input type="hidden" id="asso_@i" value="@Model.EmployeeList[i].Associatename" class="associatename"/><input type="button" value="x"     onclick="RemoveItem(@i,@i,this)"/></td>
                               @*<td><button onclick="myFunction(@count)">Add</button></td>*@
                            </tr>
                       
                              }

                        </tbody>
                    </table>
                         }
                         else
                         {
                                            <div class="row">
                                                <div class="col-xs-12">
                                                    <div class="alert alert-info">
                                                        <strong>No Details Found</strong><br />
                                                    </div>
                                                </div>
                                            </div>
                         }
                    
                </div>
            </div>
            <!-- END EXAMPLE TABLE PORTLET-->
        </div>

    </div>
   
   
</div>

<br />
@*<input type="button" id="btnExport" value="Export" />*@
 <button type="button" class="btn dark btn-outline" data-dismiss="modal">Cancel</button>
 <button type="submit" class="btn green">Save</button>

}

<!-- BEGIN PAGE LEVEL PLUGINS -->

<script src="../assets/global/scripts/datatable.js" type="text/javascript"></script>
<script src="../assets/global/plugins/datatables/datatables.min.js" type="text/javascript"></script>
<script src="../assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js" type="text/javascript"></script>
<script src="~/Scripts/table2excel.js"></script>
<!-- END PAGE LEVEL PLUGINS -->

<script>

    $(document).ready(function() {
        var d = new Date();
        d.setDate(d.getDate() - 1);
        $('#dateFrom').datepicker();
        $('#dateFrom').datepicker('setDate', d);
    });


    //$(function () {
       
    //    $("#dateFrom").datepicker("setDate", new Date()-1);
    //    $("#dateFrom").datepicker({
    //        minDate: 0,
    //        defaultDate: "+1w",
    //        changeMonth: true,
    //        numberOfMonths: 1,
    //        autoclose: true
           
    //    });
       
    //});
</script>



<script type="text/javascript">
    



    $('#btnExport').on('click', function () {
        debugger;
        var a = document.createElement('a');
        var data_type = 'data:application/vnd.ms-excel';
        var table = $('#tbluser');
        // var Header = table.find('th');
        //var table_html = '<table> <thead><tr><th>SI No</th><th>PSn</th><th>Associate</th><th>Project</th><th>Event code</th><th>Process</th><th>Production/Planned hr</th></tr></thead></table>';
        //table_html = table_html + table[0].outerHTML.replace(/ /g, '%20');
        var table_html = table[0].outerHTML.replace(/ /g, '%20');

        a.href = data_type + ', ' + table_html;
        a.download = 'MnDOTContractsList.xls';
        a.click();
        // window.open('data:application/vnd.ms-excel,' + encodeURIComponent(table[0].outerHTML));
    });



</script>

<script type='text/javascript'>
    function navigate(target) {
        //Perform your AJAX call to your Controller Action
        $.post(target,{ Date: $('#dateFrom').val() });
    }
    </script>

<script>

    function DynamicCalculation(value) {
      
        $('#tbluser tbody tr[id="' + value + '"]').each(function () {

            var project = $(this).find(".project").val();
            var event = $(this).find(".event").val();
            var process = $(this).find(".process").val();
            var hrcount = $(this).find(".hr").val();
           
            if (project != '' && event != '' && process != '' && hrcount != '') {


                var pathurl = '@Url.Action("CalculateProductionRecords", "Admin")';
                $.ajax({
                    url: pathurl,
                    type: 'GET',
                    data: {
                        Project: project,
                        Event: event,
                        Process: process,
                        Hrcount: hrcount
                    },
                    success: function (data) {
                        $('#tbluser tbody tr[id="' + value + '"]').each(function () {
                            $(this).find(".pdhr").html(parseFloat(data) * parseFloat(hrcount));
                        });
                    }
                });


            }


        });


    }




    function CalculateProduction(value) {
       
        var project = $('#project_' + value).val();
        var event = $('#event_' + value).val();
        var process = $('#Process_' + value).val();
        var planhr = $('#hr_' + value).val();
        var tothr=0;
     
        if (project != '' && event != '' && process != '' && planhr != '') {


            var pathurl = '@Url.Action("CalculateProductionRecords", "Admin")';
                $.ajax({
                    url: pathurl,
                    type: 'GET',
                    data: {
                        Project: project,
                        Event: event,
                        Process: process,
                        Hrcount: planhr
                    },
                    success: function (data) {
                        tothr=(parseFloat(data) * parseFloat(planhr)).toFixed(3);
                        Math.round(pi * 100) / 100; 
                        $('#pdhr_' + value).html("");
                        $('#pdhr_' + value).html(tothr);
                        
                    }
                });



            }


        }



        function myFunction(value) {
           
            var totalRowCount = 0;
            var rowCount = 0;
            var table = document.getElementById("tbluser");
            var rows = table.getElementsByTagName("tr")
            for (var i = 0; i < rows.length; i++) {
                totalRowCount++;
                if (rows[i].getElementsByTagName("td").length > 0) {
                    rowCount++;
                }
            }

            var psn = $('#psn_' + value).val();
            var associ = $('#asso_' + value).val();
            var pcodelist='@Html.Raw(Json.Encode(Model.ProjectList))';
            var pcodejson=JSON.parse(pcodelist);
           @* var eventlist = '@Html.Raw(Json.Encode(Model.EventList))';
            var eventjson = JSON.parse(eventlist);*@
            var projectlist = '@Html.Raw(Json.Encode(Model.ProjconfList))';
            var projjson = JSON.parse(projectlist);
            var rno=rowCount + 1;

            var projectcodeselect = '<select  name="EmployeeList[' + rowCount  + '].project"   class = "form-control"        class="project"     style="width:90px;font-size:12px;height:30px"><option value="">--Select--</option>';

            for (var i = 0; i < pcodejson.length; i++) {
                projectcodeselect = projectcodeselect + '<option value=' + pcodejson[i].Text + '>' + pcodejson[i].Value + '</option>';
            }
            projectcodeselect = projectcodeselect + '</select>';

        
            var leaveselect = '<select    style="width:60px;font-size:12px;height:30px"  class = "form-control"     name="EmployeeList[' + rowCount  + '].Leave"   ><option value="P">P</option><option value="PL">PL</option><option value="UPL">UPL</option><option value="HUPL">HUPL</option><option value="R">R</option><option value="M">M</option><option value="MEL">MEL</option><option value="MAL">MAL</option><option value="HOFF">HOFF</option><option value="HOFF">HOFF</option><option value="FH">FH</option><option value="OD">OD</option><option value="LH">LH</option>';

        leaveselect = leaveselect + '</select>';


        var projselect = '<select  name="EmployeeList[' + rowCount  + '].projectcode"   class = "form-control"     onchange="DynamicCalculation(' + rowCount + ')"    class="project"     style="width:90px;font-size:12px;height:30px"><option value="">--Select--</option>';

        for (var i = 0; i < projjson.length; i++) {
            projselect = projselect + '<option value=' + projjson[i].Text + '>' + projjson[i].Value + '</option>';
        }
        projselect = projselect + '</select>';

        //var eventselect = '<select   name="EmployeeList[' + rowCount + '].eventcode"   class = "form-control"    onchange="DynamicCalculation(' + rowCount + ')"      style="width:80px;font-size:12px;height:30px" class="event"><option value="">--Select--</option>';

        //for (var i = 0; i < eventjson.length; i++) {
        //    eventselect = eventselect + '<option value=' + eventjson[i].Text + '>' + eventjson[i].Value + '</option>';
        //}
        //eventselect = eventselect + '</select>';

        var processselect = '<select  name="EmployeeList[' + rowCount + '].process"   class = "form-control"    onchange="DynamicCalculation(' + rowCount + ')"      style="width:80px;font-size:12px;height:30px" class="process"><option value="">--Select--</option><option value="Indexing">Indexing</option><option value="Qc2">Qc2</option><option value="Qc3">Qc3</option><option value="Audit">Audit</option><option value="UAT">UAT</option><option value="Training">Training</option><option value="Rework">Rework</option>';

        processselect = processselect + '</select>';


        var inputplantext = '<input type="text" style="width:60%;"  name="EmployeeList[' + rowCount + '].hoursplanned"  value="8"    onkeyup="DynamicCalculation(' + rowCount + ');" class="hr"></input>';
        
        var inputActtext = '<input type="text" style="width:60%;"  name="EmployeeList[' + rowCount + '].hoursworked" value="8"  class="hr"></input>';

        var tablerow = '<tr id="' + rowCount + '"><td>' + rno + ' </td><td><input type="hidden" name="EmployeeList[' + rowCount + '].psn"  value=' + psn + ' /> ' + psn + '</td><td style="width:40px;font-size:12px">' + associ + '</td><td>'

      

        tablerow = tablerow + projectcodeselect;


        tablerow = tablerow + '</td><td>'

        tablerow = tablerow + projselect;
        tablerow = tablerow + '</td><td>'
        tablerow = tablerow + processselect;
        tablerow = tablerow + '</td><td>'
        tablerow = tablerow + inputplantext;
        tablerow = tablerow + '</td><td>'
        tablerow = tablerow + inputActtext;

        tablerow = tablerow + '</td><td>'
        tablerow = tablerow + leaveselect + '</td>';
                   
            
        tablerow = tablerow + '</td><td><input type="text" name="EmployeeList[' + rowCount + '].ActualProduction" style="width:80px;"   ></input></td>'
        tablerow =tablerow + '<td><input type="text" name="EmployeeList[' + rowCount + '].workathome" style="width:80px;"   ></input></td>'
        tablerow = tablerow +  '<td><button title="Remove Item" class="btn btn-xs red" type="button" onclick="RemoveOutputItem(this,' + rowCount + ')">X</button></td></tr>';
        $("table tbody").append(tablerow);
    }


    
    function RemoveItem(itemid, item, btnobj) {
        swal({
            title: "Do you really want to remove item ?",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Remove",
            closeOnConfirm: true,
        },
    function () {
       
       
        var parentrow = $(btnobj).parent().parent();
        var startindex = parentrow.index();
       
        $('#tbluser tbody tr').each(function () {
            if (parentrow.index() < $(this).index()) {
               
                $(this).find('.psn').attr('name', 'EmployeeList[' + startindex + '].PSN')
                $(this).find('.associatename').attr('name', 'EmployeeList[' + startindex + '].Associatename')
              
                startindex = startindex + +1;
            }
        });

        parentrow.remove();

        $('#tbluser tbody tr').each(function () {
            if ($(this).attr('Id') == itemid) {
                $(this).remove();
            }
        });
    });

    }



   








    //function RemoveOutputItem(btnobj, itemindex) {
    //    swal({
    //        title: "Do you really want to remove this record ?",
    //        showCancelButton: true,
    //        confirmButtonClass: "btn-danger",
    //        confirmButtonText: "Remove",
    //        closeOnConfirm: true,
    //    },
    //function () {
    //    var parentrow = $(btnobj).parent().parent();
    //    var startindex = parentrow.index();
    //    var varietyid = $(parentrow).attr('id');
    //    parentrow.remove();
        
    //});

    //}













    
    function DeleteFunction(itemindex) {
        swal({
            title: "Do you really want to remove this record ?",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Remove",
            closeOnConfirm: true,
        },
    function () {
        $(itemindex).remove();
        
    });

    }



  

    jQuery(document).ready(function () {
        setTimeout(function () {
            $("#MsgDiv").slideUp(400);
        }, 2000);
        $('#divPhotolistpop').css('width', '55%');
    });

</script>




