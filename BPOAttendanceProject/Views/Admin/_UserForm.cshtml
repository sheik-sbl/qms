<link href="../assets/global/plugins/bootstrap-sweetalert/sweetalert.css" rel="stylesheet" />
<link href="../assets/global/plugins/bootstrap-modal/css/bootstrap-modal-bs3patch.css" rel="stylesheet" type="text/css" />
<link href="../assets/global/plugins/bootstrap-modal/css/bootstrap-modal.css" rel="stylesheet" type="text/css" />

@model BPOAttendanceProject.Models.User

<div>
    @using (Html.BeginForm("SaveUser", "Admin", FormMethod.Post, new { @classs = "userform", @id = "form" }))
    {
        <div class="modal-content">
            <div class="modal-body">
                <div>
                    <div>
                        <!-- BEGIN SAMPLE FORM PORTLET-->
                        <div class="portlet light bordered">
                            <div class="m-heading-1 border-green m-bordered">
                                <div class="caption">
                                    <i class="fa fa-edit"></i>
                                  
                                      @if (Model.Id == 0)
                                    {
                                    <span class="caption-subject font-dark sbold uppercase">Add User</span>
                                    }
                                    else
                                    {
                                        <span class="caption-subject font-dark sbold uppercase">Edit User</span>
                                    }


                                </div>
                            </div>
                            <div class="portlet-body form">
                                <div class="form-horizontal">
                                    <div class="form-body">
                                        <div class="row">
                                            <div class="col-md-6">

                                                <div class="form-group">
                                                    @Html.HiddenFor(model => model.Id, new { @Id = "Id" })
                                                    <label class="col-md-3 control-label">PSN</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span id="errmsg" class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.UserName, new {  @id = "txtusername", @class = "form-control", @placeholder = "User Name", @autocomplete = "off", @required = "required",@maxlength="20" })

                                                        </div>


                                                    </div>
                                                </div>
                                                @if (Model.Id == 0)
                                                {

                                                    <div class="form-group">
                                                        <label class="col-md-3 control-label">Password</label>
                                                        <div class="col-md-9">
                                                            <div class="input-group">
                                                                <span class="input-group-addon">
                                                                    <i class="fa fa-envelope"></i>
                                                                </span>
                                                                @Html.PasswordFor(model => model.Password, new { @id = "txtPassword", @class = "form-control", @placeholder = "Password", @autocomplete = "off", @required = "required",@maxlength="20"})

                                                            </div>
                                                            <span id="result"></span>

                                                        </div>
                                                    </div>

                                                }


                                                <div class="form-group">
                                                    <label class="col-md-3 control-label">First Name</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.FirstName, new { @id = "txtFirstname", @class = "form-control", @placeholder = "First Name", @autocomplete = "off", @required = "required",@maxlength="50" })

                                                        </div>


                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-md-3 control-label">Last Name</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.LastName, new { @id = "txtLastname", @class = "form-control", @placeholder = "Last Name", @autocomplete = "off", @required = "required",@maxlength="50" })

                                                        </div>


                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-md-3 control-label">Email Id</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.EmailId, new { onchange = "CheckAccessEmailAlreadyExist(this)", @id = "txtEmailId", @class = "form-control", @placeholder = "Email Id", @autocomplete = "off",@maxlength="50" })

                                                        </div>


                                                    </div>
                                                </div>

                                              <div class="form-group">
                                                    <label class="col-md-3 control-label">Location</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.DropDownListFor(m => m.locationId , new SelectList(new List<SelectListItem> {
                                                                                                         new SelectListItem { Text = "KAKKANAD", Value = "6"},       
                                                                                                         new SelectListItem { Text = "MNS", Value = "5"}, 
                                                                                                         new SelectListItem { Text = "MQC", Value = "4"}, 
                                                                                                         new SelectListItem { Text = "MDS", Value = "3"},
                                                                                                         new SelectListItem { Text = "KNPY", Value = "2"}, 
                                                                                                         new SelectListItem { Text = "TVM", Value = "1"},                  
                                                                                                         
                                                                                                     }, "Value", "Text"), "Select",new {style = "width: 100%;", @required = "required", @class = "btn dropdown-toggle btn-default", @autocomplete = "off", @id = "drpLocation"})

                                                        </div>


                                                    </div>
                                                </div>


                                                 <div class="form-group">
                                                    <label class="col-md-3 control-label">Role</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.DropDownListFor(m => m.RoleId , new SelectList(new List<SelectListItem> {
                                                                                                         new SelectListItem { Text = "Admin", Value = "1"},       
                                                                                                         new SelectListItem { Text = "Teamlead", Value = "2"}, 
                                                                                                         new SelectListItem { Text = "Project Lead", Value = "3"}, 
                                                                                                         new SelectListItem { Text = "Project Manager", Value = "4"},
                                                                                                                         
                                                                                                         
                                                                                                     }, "Value", "Text"), "Select",new {style = "width: 100%;", @required = "required", @class = "btn dropdown-toggle btn-default", @autocomplete = "off", @id = "drpRole"})

                                                        </div>


                                                    </div>
                                                </div>




                                                


                                               <div class="form-group">
                                                    <label class="col-md-3 control-label">PM</label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.PM, new {  @id = "txtPM", @class = "form-control", @placeholder = "PM", @autocomplete = "off",@maxlength="50" })

                                                        </div>


                                                    </div>
                                                </div>


                                               


                                                   

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- END SAMPLE FORM PORTLET-->
                    </div>

                </div>
            </div>
            <div class="modal-footer">


                <div class="md-checkbox" style="position: absolute">
                    @Html.CheckBoxFor(model => model.IsActive, new { @id = "chkActive", @checked = "true", @class = "md-check", @autocomplete = "off" })
                    <label for="chkActive">
                        <span class="inc"></span>
                        <span class="check"></span>
                        <span class="box"></span>IsActive
                    </label>
                </div>
                <button type="button" class="btn dark btn-outline" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn green">Save</button>
            </div>
        </div>
    }
    <!-- /.modal-content -->
</div>
<!-- /.modal-dialog -->





<!-- BEGIN PAGE LEVEL PLUGINS -->
<script src="../assets/global/plugins/bootstrap-sweetalert/sweetalert.js"></script>
<script src="../assets/global/plugins/bootstrap-modal/js/bootstrap-modalmanager.js" type="text/javascript"></script>
<script src="../assets/global/plugins/bootstrap-modal/js/bootstrap-modal.js" type="text/javascript"></script>
<!-- END PAGE LEVEL PLUGINS -->

<!-- BEGIN PAGE LEVEL SCRIPTS -->
<script src="../assets/pages/scripts/ui-extended-modals.min.js" type="text/javascript"></script>
<!-- END PAGE LEVEL SCRIPTS -->

<script type="text/javascript">
    var result = "";
    jQuery(document).ready(function () {
        var Id = $("#Id").val();
        if (Id == 0)
        {
            $("#chkActive").prop("checked", true);
        }
        $('#txtPassword').keyup(function () {
            $('#result').html(passwordStrength($('#txtPassword').val(), ""))
            result = $('#result').html();
            if (result == "Too short") {
                $('#result').attr({ 'style': 'color:Red;' });
            }
            if (result == "Bad") {
                $('#result').attr({ 'style': 'color:Olive;' });
            }
            if (result == "Good") {
                $('#result').attr({ 'style': 'color:Lime;' });
            }
            if (result == "Strong") {
                $('#result').attr({ 'style': 'color:Green;' });
            }

        })

        $("#txtusername").keypress(function (e) {
            //if the letter is not digit then display error and don't type anything
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                //display error message
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });



    })
  
    $(function () {
        $('#form').validate({

            rules: {
                UserName: {
                    required: true
                },
                Password: {
                    required: true
                },
                FirstName: {
                    required: true
                },
                
                EmailId: {
                    required: true,
                    email: true
                }
        },

            messages: {
                UserName: {
                    required: " Username  required."
                },
                Password: {
                    required: "Password is required."
                },
                FirstName: {
                    required: "FirstName is required."
                },
               
                LastName: {
                    required: "LastName is required."
                },
                EmailId: {
                    
                    email: "Please enter a valid email address"
                }
               
               
                
            },

            invalidHandler: function (event, validator) {

                $('.alert-danger', $('#form')).show();
            },

            highlight: function (element) { // hightlight error inputs
                $(element).closest('.valid-group').addClass('has-error'); // set error class to the control group
            },

            success: function (label) {
                label.closest('.valid-group').removeClass('has-error');
                label.remove();
            },

            errorPlacement: function (error, element) {
                error.addClass('text-danger');
                error.insertAfter(element.closest('.input-group'));
            },

            submitHandler: function (form) {
                form.submit();
            }
        });
    });

   




    function checkEmail(value) {

        var valid = true;

        if (value.indexOf('@@') == -1) {
            valid = false;
        } else {

            var parts = value.split('@@');
            var domain = parts[1];

            if (domain.indexOf('.') == -1) {

                valid = false;

            } else {

                var domainParts = domain.split('.');
                var ext = domainParts[1];

                if (ext.length > 4 || ext.length < 2) {

                    valid = false;
                }
            }

        }


        return valid;

    };




    function CheckAccessAlreadyExist(object) {
     
        var Value = $("#txtusername").val();
        if (Value.length > 0) {
            var pathurl = '@Url.Action("CheckStringWithOneColumn", "Admin")';
            $.ajax({
                url: pathurl,
                type: 'POST',
                data: {ActualValue: Value },
                success: function (data) {
                    if (data == "true") {
                        alert("UserName  already exist !");
                        $(object).val("");
                        $(object).focus();
                    }
                }
            });
        }
    }

    function CheckAccessEmailAlreadyExist(object) {


        var TableName = "muser";
        var ColumnName = "EmailId";
        var Value = $("#txtEmailId").val();
        if (Value.length > 0) {
            var pathurl = '@Url.Action("CheckStringWithOneColumn", "Admin")';
            $.ajax({
                url: pathurl,
                type: 'POST',
                data: { ActualTableName: TableName, ActualColumnName: ColumnName, ActualValue: Value },
                success: function (data) {
                    if (data == "true") {
                        bootbox.alert("Email already exist !");
                        $(object).val("");
                        $(object).focus();
                    }
                }
            });

        }
    }



</script>
<style>

    .sweet-overlay {
        z-index: 20000;
    }

    .sweet-alert {
        z-index: 20000;
    }

    #errmsg
{
color: red;
}

</style>















