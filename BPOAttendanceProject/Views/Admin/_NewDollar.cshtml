
@model BPOAttendanceProject.Models.DollarModel

<div>
    @using (Html.BeginForm("SaveNewDollar", "Admin", FormMethod.Post, new { @classs = "userform", @id = "form", onsubmit = "return validateTagInput();" }))
    {
        <div class="modal-content">
            <div class="modal-body">
                <div>
                    <div>
                        <!-- BEGIN SAMPLE FORM PORTLET-->
                        <div class="portlet light bordered">
                            <div class="m-heading-1 border-green m-bordered">
                                <div class="caption">
                                    <i class="fa fa-edit"></i>
                                  
                                    
                                    <span class="caption-subject font-dark sbold uppercase">Add Dollar</span>
                                   


                                </div>
                            </div>
                            <div class="portlet-body form">
                                <div class="form-horizontal">
                                    <div class="form-body">
                                        <div class="row">
                                            <div class="col-md-6">

                                                 <div class="form-group">
                                                    <label class="col-md-3 control-label">Date</label>
                                                    <div class="col-md-9">
                                                    <div class="input-group date date-picker" data-date-format="dd/mm/yyyy">
                                                        @Html.TextBoxFor(model => model.dollardate, new { @class = "form-control", @placeholder = "Date", @autocomplete = "off", @required = "true",@id = "datepicker" })
                                                       
                                                        <span class="input-group-addon">
                                                            <i class="fa fa-calendar"></i>
                                                        </span>
                                                    </div>


                                                    </div>
                                                </div>  
                                              
                                                
                                                
                                                 <div class="form-group">
                                                    @Html.HiddenFor(model => model.id, new { @Id = "Id" })
                                                    <label class="col-md-3 control-label">Dollar<span  style="color:red"> *</span></label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span id="errmsg" class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.dollarrate, new { @id = "txtdollarrate", @class = "form-control", @autocomplete = "off", @required = "required",@maxlength="3" })
                                                             @Html.ValidationMessageFor(model => model.dollarrate, "", new { @class = "text-danger" })
                                                        </div>


                                                    </div>
                                                </div>
                                               

                                                 <div class="form-group">
                                                 
                                                    <label class="col-md-3 control-label">Pound<span  style="color:red"> *</span></label>
                                                    <div class="col-md-9">
                                                        <div class="input-group">
                                                            <span id="errmsg1" class="input-group-addon">
                                                                <i class="fa fa-envelope"></i>
                                                            </span>
                                                            @Html.TextBoxFor(model => model.poundrate, new { @id = "txtpoundrate", @class = "form-control", @autocomplete = "off", @required = "required",@maxlength="3" })
                                                             @Html.ValidationMessageFor(model => model.poundrate, "", new { @class = "text-danger" })
                                                        </div>


                                                    </div>
                                                </div>
                                               

                                       

                                               

                                               
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- END SAMPLE FORM PORTLET-->
                    </div>

                </div>
            </div>
            <div class="modal-footer">


               
                <button type="button" class="btn dark btn-outline" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn green" >Save</button>
            </div>
        </div>
    }
    <!-- /.modal-content -->
</div>
<!-- /.modal-dialog -->





<!-- BEGIN PAGE LEVEL PLUGINS -->
<script src="../assets/global/plugins/bootstrap-sweetalert/sweetalert.js"></script>
<script src="../assets/global/plugins/bootstrap-modal/js/bootstrap-modalmanager.js" type="text/javascript"></script>
<script src="../assets/global/plugins/bootstrap-modal/js/bootstrap-modal.js" type="text/javascript"></script>
<!-- END PAGE LEVEL PLUGINS -->

<!-- BEGIN PAGE LEVEL SCRIPTS -->
<script src="../assets/pages/scripts/ui-extended-modals.min.js" type="text/javascript"></script>
<!-- END PAGE LEVEL SCRIPTS -->
<script type="text/javascript">
   
     $(function () {
       
         $("#datepicker").datepicker({
             format: 'dd/mm/yyyy',
             minDate: 0,
             defaultDate: "+1w",
             changeMonth: true,
             numberOfMonths: 1,


         });
         var date = new Date();
         $('#datepicker').datepicker("setDate", date);
         $('#datepicker').datepicker({ autoclose: true });


     });



    function validateTagInput() {
        var x=document.getElementById("datepicker");
        var y=document.getElementById("txtdollarrate");
        var z = document.getElementById("txtpoundrate");
        
        if (x!=null && y!=null&& z!=null) {
            return true;
        }
        else
        {
            return false; 
        }
    }

    jQuery(document).ready(function () { 
        $('#form').validate({
        
            rules: {
                dollarrate: {
                    required: true
                },
                poundrate: {
                    required: true
                }
            },

            messages: {
                dollarrate: {
                    required: " Username  required."
                },
                poundrate: {
                    required: "Password is required."
                }


            },

            invalidHandler: function (event, validator) {

                $('.alert-danger', $('#form')).show();
            },

            highlight: function (element) { // hightlight error inputs
                $(element).closest('.valid-group').addClass('has-error'); // set error class to the control group
            },

            success: function (label) {
                label.closest('.valid-group').removeClass('has-error');
                label.remove();
            },

            errorPlacement: function (error, element) {
                error.addClass('text-danger');
                error.insertAfter(element.closest('.input-group'));
            },

            submitHandler: function (form) {
                form.submit();
            }
        });
    });








</script>

<style>

    .sweet-overlay {
        z-index: 20000;
    }

    .sweet-alert {
        z-index: 20000;
    }

    #errmsg
{
color: red;
}

</style>














