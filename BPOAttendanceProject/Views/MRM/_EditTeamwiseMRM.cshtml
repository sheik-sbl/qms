@model   BPOAttendanceProject.Models.TeamwiseMRMModel  

@{
    int i = 0;
}

@using (Html.BeginForm("SaveTeamwiseMRM", "MRM", FormMethod.Post, new { @id = "form" }))
{
       
        
    <div class="modal-content">
        <div class="modal-body">
            <div>
                <div>
                    <!-- BEGIN SAMPLE FORM PORTLET-->
                    <div class="portlet light bordered">
                        <div class="m-heading-1 border-green m-bordered">
                            <div class="caption font-dark">
                                @if (Model.TeamwiseModel.teamwiseid == 0)
                                {
                                <span class="caption-subject bold uppercase">Add  Details  </span>
                                }
                                else
                                {
                                     <span class="caption-subject bold uppercase">Edit  Details </span>
                                }
                            </div>
                        </div>

                        <div class="portlet-body form">
                            <div class="form-horizontal">
                                <div class="form-body">
                                    <div class="row" style="border-bottom: 1px solid #eef1f5;">
                                        <div class="col-md-4">


                                            <div class="form-group">
                                                <label class="col-md-4 control-label">Month </label>
                                                <div class="col-md-8 valid-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon">
                                                            <i class="fa fa-envelope"></i>
                                                        </span>
                                                    @Html.HiddenFor(model => model.TeamwiseModel.teamwiseid)
                                                    
                                                    @Html.DropDownListFor(model => model.TeamwiseModel.month , new SelectList(new List<SelectListItem> { 
                                                                                                         new SelectListItem { Text = "January", Value = "1"}, 
                                                                                                         new SelectListItem { Text = "February", Value = "2"}, 
                                                                                                         new SelectListItem { Text = "March", Value = "3"}, 
                                                                                                         new SelectListItem { Text = "April", Value = "4"},                   
                                                                                                         new SelectListItem { Text = "May", Value = "5"},
                                                                                                         new SelectListItem { Text = "June", Value = "6"}, 
                                                                                                         new SelectListItem { Text = "July", Value = "7"}, 
                                                                                                         new SelectListItem { Text = "August", Value = "8"}, 
                                                                                                         new SelectListItem { Text = "September", Value = "9"},                   
                                                                                                         new SelectListItem { Text = "October", Value = "10"},
                                                                                                         new SelectListItem { Text = "November", Value = "11"},
                                                                                                         new SelectListItem { Text = "December", Value = "12"}
                                                                                                     }, "Value", "Text"), "Select",new {style = "width: 100%;", @required = "required", @class = "btn dropdown-toggle btn-default", @autocomplete = "off", @id = "drpMonth",@onchange="BindClientcodebaseMonthyear();"  })
                                                       
                                              
                                                    </div>
                                                </div>
                                            </div>

                                      

                                            <div class="form-group">
                                                <label class="col-md-4 control-label">Year</label>
                                                <div class="col-md-8 valid-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon">
                                                            <i class="fa fa-envelope"></i>
                                                        </span>
                                                      @Html.DropDownListFor(model => model.TeamwiseModel.year , new SelectList(new List<SelectListItem> {
                                                                                                          new SelectListItem { Text = "2021", Value = "1"}, 
                                                                                                         new SelectListItem { Text = "2020", Value = "2"},
                                                                                                         new SelectListItem { Text = "2019", Value = "3"},
                                                                                                     }, "Value", "Text"), "Select",new {style = "width: 100%;", @required = "required", @class = "btn dropdown-toggle btn-default", @autocomplete = "off", @id = "drpYear"  })
                                                       

                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="col-md-4 control-label">Name</label>
                                                <div class="col-md-8 valid-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon">
                                                            <i class="fa fa-envelope"></i>
                                                        </span>
                                                            @Html.DropDownListFor(model => model.TeamwiseModel.empname , new SelectList(new List<SelectListItem> {
                                                                                                          new SelectListItem { Text = "Salini", Value = "1"}, 
                                                                                                         new SelectListItem { Text = "Sabari", Value = "2"},
                                                                                                         new SelectListItem { Text = "Arun", Value = "3"},
                                                                                                         new SelectListItem { Text = "Sheik", Value = "4"}
                                                                                                     }, "Value", "Text"), "Select",new {style = "width: 100%;", @required = "required", @class = "btn dropdown-toggle btn-default", @autocomplete = "off", @id = "drpYear"  })
                                                       
                                                    </div>
                                                </div>
                                            </div>

                                           
                                        </div>


                                      


                                    </div>

                               

                                </div>
                            </div>
                        </div>





                    </div>
                    <!-- END SAMPLE FORM PORTLET-->
                </div>

            </div>



            <div class="portlet light bordered">
               


                <div class="row">
                    <div class="form-group valid-group" style="padding: 10px">

                        <table class="table table-striped table-bordered table-hover table-checkable order-column" id="tblitems">
                            <thead>
                                <tr class="odd gradeX">

                                    <th> Week </th>
                                    <th> Employee count </th>
                                    <th> Billable Hrs </th>
                                    <th> External Billed Hrs </th>
                                    <th> Approved Internal Hrs</th>
                                    <th> Unbilled Hrs</th>
                                    
                                </tr>
                            </thead>
                           
                                <tbody>
                                     @foreach (var mile in Model.TeamwiseModel.LstItems)
                                    {
                                   
                                    <tr>
                                        <td>@mile.weekinmonth</td>
                                        <td><input type="hidden" id="week"  value=@mile.weekinmonth  style="width: 50%;font-size:12px;"  name="TeamwiseModel.LstItems[@i].weekinmonth"   /><input type="text" id="week1ecount"      style="width: 50%;font-size:12px;"  name="TeamwiseModel.LstItems[@i].Empcount"  value="@mile.Empcount"  onkeypress = "return isNumber(event)" /></td>
                                         <td><input type="text" id="week1billable"     style="width: 50%;font-size:12px;" name="TeamwiseModel.LstItems[@i].Billablehrs"   value="@mile.Billablehrs" onkeypress = "return isNumber(event)" /></td>
                                        <td><input type="text" id="week1external"     style="width: 50%;font-size:12px;"  name="TeamwiseModel.LstItems[@i].Externalhrs"  value="@mile.Externalhrs" onkeypress = "return isNumber(event)" /></td>
                                        <td><input type="text" id="week1approved"     style="width: 50%;font-size:12px;"  name="TeamwiseModel.LstItems[@i].Appinternalhrs" value="@mile.Appinternalhrs"  onkeypress = "return isNumber(event)"  /></td>
                                         <td><input type="text" id="week1Unbilled"      style="width: 50%;font-size:12px;"  name="TeamwiseModel.LstItems[@i].unbilledhrs" value="@mile.unbilledhrs"  onkeypress = "return isNumber(event)" /></td>
                                    </tr>
                                        i++;
                                     }
                                
                                 
                       

                                </tbody>
                          
                        </table>


                    </div>
                </div>


            </div>














        </div>
        <div class="modal-footer">

            <button type="button" class="btn dark btn-outline" data-dismiss="modal">Cancel</button>
            <button type="submit" class="btn green">Save</button>
        </div>


        <!-- /.modal-content -->
    </div>
}
<script>

    $(function () {

        $("#from").datepicker({
            format: 'mm/dd/yyyy',
            minDate: 0,
            defaultDate: "+1w",
            changeMonth: true,
            numberOfMonths: 1,


        });

       



        //$("#from").datepicker("setDate", new Date());

        //var date = new Date();
        //date.setTime(date.getTime() - (1000 * 60 * 60 * 24))
        //$('#from').datepicker("setDate", date);
        $('#from').datepicker({ autoclose: true });

    });




    function AddItem() {
        $('#tblitems').closest('.valid-group').find('.tableerror').remove();
       
        var milestonename = document.getElementById("txtmilestonename").value;
      
        if (milestonename == "") {

            swal({
                title: "Please add Name!!!",
                confirmButtonClass: "btn-danger",
            })
            return false;
        }
        var milesdate = document.getElementById("from").value;
        if (milesdate == "") {

            swal({
                title: "Please add Date!!!",
                confirmButtonClass: "btn-danger",
            })
            return false;
        }

        var milescharacter = document.getElementById("txtcharacter").value;
        if (milescharacter == "") {

            swal({
                title: "Please add Character!!!",
                confirmButtonClass: "btn-danger",
            })
            return false;
        }


        var allreadyExist = false;
        var MilestoneName = $("#txtmilestonename").val();
        
        debugger;
        $('#tblitems tr').each(function (i, row) {

            
            if ($(row).find('td:eq(0)').text() == MilestoneName) {
                allreadyExist = true;
                return false;
            }

        });
        if (allreadyExist) {
            swal({
                title: "Milestone already added!!",
                confirmButtonClass: "btn-danger",
            })
            return false;
        }
        /*
        <input id="PackingspecificationDetails_8__ItemId" name="PackingspecificationDetails[8].ItemId" type="hidden" value=""> 
        */
        debugger;
        var totalRows = $('#tblitems tr').length - 1;
        $('#tblitems').append('<tr><td><input class="item"  name="MilestoneModel.LstItems[' + totalRows + '].milestonename" type="hidden" value="' + $('#txtmilestonename').val() + '">' + $('#txtmilestonename').val() +
            '</td><td><input   class="qty" name="MilestoneModel.LstItems[' + totalRows + '].milestonedate" type="hidden" value="' + $('#from').val() + '" >' + $('#from').val() + '</td><td><input   class="qty" name="MilestoneModel.LstItems[' + totalRows + '].milestonereccharact" type="hidden" value="' + $('#txtcharacter').val() + '" >' + $('#txtcharacter').val() + '</td>'
           +
             '<td><button title="Remove Item" class="btn btn-xs red" type="button" onclick="RemoveItem(' + $('#txtmilestonename').val() + ',\'' + $('#txtmilestonename').val() + '\',this)">X</button>' + '</td></tr>');

        document.getElementById("from").value = "";
        document.getElementById("txtmilestonename").value = "";
        document.getElementById("txtcharacter").value = "";

    }


    $(function () {
        $("#form").validate({

            rules: {
                TotalImages: {
                    required: true,
                    min: 1,
                    number: true
                },
                TotalBatches: {
                    required: true,
                    min: 1,
                    number: true
                }
               
            },

            messages: {
                TotalImages: {
                    required: "Image count is required and value should be greater than 0 ."
                },
                TotalBatches: {
                    required: "Batch Name is required and value should be greater than 0."
                }
            },






            invalidHandler: function (event, validator) {
                $('.alert-danger', $('#form')).show();
                if ($('#tblitems').find('tbody tr').length == 0) {
                    $('#tblitems').closest('.valid-group').find('.tableerror').remove();
                    $('#tblitems').closest('.valid-group').append('<label class="text-danger tableerror">Add atleast one item</label>');
                }

            },
            highlight: function (element) { // hightlight error inputs
                $(element).closest('.valid-group').addClass('has-error'); // set error class to the control group
            },
            success: function (label) {
                label.closest('.valid-group').removeClass('has-error');
                label.remove();
            },

            errorPlacement: function (error, element) {
                error.addClass('text-danger');
                error.insertAfter(element.closest('.input-group'));
            },

            submitHandler: function (form) {
                var succitem = true;


                if ($('#tblitems').find('tbody tr').length == 0) {
                    $('#tblitems').closest('.valid-group').find('.tableerror').remove();
                    $('#tblitems').closest('.valid-group').append('<label class="text-danger tableerror">Add atleast one item</label>');
                    succitem = false;
                }
                else {
                    $('#tblitems').closest('.valid-group').find('.tableerror').remove();
                }


                if (succitem) {
                    var batchno = $('#txtbatch').val();
                    var imagecount = $('#txtimage').val();
                    var expcharacter = $('#txtExpcharacter').val();
                    if (batchno == 0 || imagecount == 0 || expcharacter == 0) {
                        alert("Please fill the required fields with value greater than 0");
                    }
                    else {
                        form.submit();
                    }
                }
            }



        });

    });


    function CheckAccessCodeAlreadyExist(object) {


        var TableName = "mpackingspecification";
        var ColumnName = "Code";
        var Value = $("#txtCode").val();
        if (Value.length > 0) {
            var pathurl = '@Url.Action("CheckStringWithOneColumn", "Admin")';
            $.ajax({
                url: pathurl,
                type: 'POST',
                data: { ActualTableName: TableName, ActualColumnName: ColumnName, ActualValue: Value },
                success: function (data) {

                    if (data == "true") {
                        swal("PackingSpecification Code already exist !");
                        $(object).val("");
                        $(object).focus();
                    }
                }
            });
        }

    }



    







    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 45 || charCode > 57)) {
            return false;
        }
        return true;
    }
    function RemoveItem(milestonename, mledate, btnobj) {
        swal({
            title: "Do you really want to remove item ?",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Remove",
            closeOnConfirm: true,
        },
    function () {
       

        var parentrow = $(btnobj).parent().parent();
        var startindex = parentrow.index();
        $('#tblitems tbody tr').each(function () {
            if (parentrow.index() < $(this).index()) {
                $(this).find('.item').attr('name', 'MilestoneModel.LstItems[' + startindex + '].milestonename')
                $(this).find('.qty').attr('name', 'MilestoneModel.LstItems[' + startindex + '].milestonedate')

                startindex = startindex + +1;
            }
        });

        parentrow.remove();

        $('#tbldetails tbody tr').each(function () {

         

            if ($(this).attr('milestonename') == milestonename) {

                $(this).remove();
            }
        });
    });

    }















</script>

<style>
    .sweet-overlay {
        z-index: 20000;
    }

    .sweet-alert {
        z-index: 20000;
    }
</style>

